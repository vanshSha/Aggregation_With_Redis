services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    platform: linux/arm64
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # PLAINTEXT_HOST -> External , PLAINTEXT_INTERNAL -> Internal
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    platform: linux/arm64
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    #      - "9093:9093"   # âœ… expose internal listener too

    networks:
      - kafka-net
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"



  kafka-ksqldb:
    image: confluentinc/cp-ksqldb-server:7.5.0
    platform: linux/arm64
    hostname: kafka-ksqldb
    container_name: kafka-ksqldb
    restart: unless-stopped
    networks:
      - kafka-net
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: kafka-ksqldb
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_EXTENSION_DIR: "/data/udfs"
    volumes:
      - ./data2/kafka-ksqldb-data/scripts:/data/scripts/
      - ./data2/kafka-ksqldb-data/udfs:/data/udfs/
    depends_on:
      - kafka

  # How to access -> http://localhoclst:8090
  # STERS_0_ZOOKEEPER: zookeeper:2181

  redis:
    image: redis:8.2.1
    platform: linux/arm64/v8
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "mac", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data
    restart: always

volumes:
  redis_data:


networks:
  kafka-net:
    external: true


